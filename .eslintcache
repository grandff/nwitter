[{"/Users/kjm/Documents/nwitter/src/index.js":"1","/Users/kjm/Documents/nwitter/src/components/App.js":"2","/Users/kjm/Documents/nwitter/src/components/Router.js":"3","/Users/kjm/Documents/nwitter/src/routes/Auth.js":"4","/Users/kjm/Documents/nwitter/src/routes/Home.js":"5","/Users/kjm/Documents/nwitter/src/fbase.js":"6","/Users/kjm/Documents/nwitter/src/components/Navigation.js":"7","/Users/kjm/Documents/nwitter/src/routes/Profile.js":"8","/Users/kjm/Documents/nwitter/src/components/Nweet.js":"9","/Users/yurako/Documents/nwitter_ko/nwitter/src/index.js":"10","/Users/yurako/Documents/nwitter_ko/nwitter/src/fbase.js":"11","/Users/yurako/Documents/nwitter_ko/nwitter/src/components/App.js":"12","/Users/yurako/Documents/nwitter_ko/nwitter/src/components/Router.js":"13","/Users/yurako/Documents/nwitter_ko/nwitter/src/components/Navigation.js":"14","/Users/yurako/Documents/nwitter_ko/nwitter/src/routes/Home.js":"15","/Users/yurako/Documents/nwitter_ko/nwitter/src/routes/Profile.js":"16","/Users/yurako/Documents/nwitter_ko/nwitter/src/routes/Auth.js":"17","/Users/yurako/Documents/nwitter_ko/nwitter/src/components/Nweet.js":"18","/Users/yurako/Documents/nwitter_ko/nwitter/src/components/NweetFactory.js":"19","/Users/yurako/Documents/nwitter_ko/nwitter/src/components/AuthForm.js":"20"},{"size":236,"mtime":1608712617561,"results":"21","hashOfConfig":"22"},{"size":896,"mtime":1609297389505,"results":"23","hashOfConfig":"22"},{"size":869,"mtime":1609297410396,"results":"24","hashOfConfig":"22"},{"size":2425,"mtime":1609124733047,"results":"25","hashOfConfig":"22"},{"size":2008,"mtime":1609298616760,"results":"26","hashOfConfig":"22"},{"size":615,"mtime":1609211582156,"results":"27","hashOfConfig":"22"},{"size":249,"mtime":1609124909554,"results":"28","hashOfConfig":"22"},{"size":415,"mtime":1609125220461,"results":"29","hashOfConfig":"22"},{"size":1615,"mtime":1609299488224,"results":"30","hashOfConfig":"22"},{"size":229,"mtime":1610508649175,"results":"31","hashOfConfig":"32"},{"size":1017,"mtime":1609813751225,"results":"33","hashOfConfig":"32"},{"size":1419,"mtime":1610333156259,"results":"34","hashOfConfig":"32"},{"size":1246,"mtime":1610590026329,"results":"35","hashOfConfig":"32"},{"size":1174,"mtime":1610589431170,"results":"36","hashOfConfig":"32"},{"size":1439,"mtime":1610332693848,"results":"37","hashOfConfig":"32"},{"size":1832,"mtime":1610590415312,"results":"38","hashOfConfig":"32"},{"size":1418,"mtime":1610589710484,"results":"39","hashOfConfig":"32"},{"size":2601,"mtime":1610589593861,"results":"40","hashOfConfig":"32"},{"size":3418,"mtime":1610589965699,"results":"41","hashOfConfig":"32"},{"size":1930,"mtime":1610509033525,"results":"42","hashOfConfig":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},"jlvtnm",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1b8kd9c",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"66"},"/Users/kjm/Documents/nwitter/src/index.js",["93"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport fbase from \"./fbase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);",["94","95"],"/Users/kjm/Documents/nwitter/src/components/App.js",[],"/Users/kjm/Documents/nwitter/src/components/Router.js",[],"/Users/kjm/Documents/nwitter/src/routes/Auth.js",[],"/Users/kjm/Documents/nwitter/src/routes/Home.js",[],"/Users/kjm/Documents/nwitter/src/fbase.js",[],"/Users/kjm/Documents/nwitter/src/components/Navigation.js",[],"/Users/kjm/Documents/nwitter/src/routes/Profile.js",["96"],"import React from \"react\";\nimport {authService} from \"fbase\";\nimport {useHistory} from \"react-router-dom\";\n\n\nexport default () => {\n    const history = useHistory();\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");      // redirect 태그를 안쓰고 처리\n    }\n    return (\n        <>\n            <button onClick = {onLogOutClick}>Log Out</button>\n        </>\n    );\n}","/Users/kjm/Documents/nwitter/src/components/Nweet.js",[],"/Users/yurako/Documents/nwitter_ko/nwitter/src/index.js",[],["97","98"],"/Users/yurako/Documents/nwitter_ko/nwitter/src/fbase.js",[],"/Users/yurako/Documents/nwitter_ko/nwitter/src/components/App.js",["99","100"],"import React, { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport {authService} from \"fbase\";\n\nfunction App() {    \n  const [init, setInit] = useState(false);  \n  const [isLoggedIn, setIsLoggedIn] = useState(false);    // 로그인 여부 확인\n  const [userObj, setUserObj] = useState(null);   \n\n  useEffect(() => {\n    authService.onAuthStateChanged( (user) => {\n      /* change.. not use setisloggedin */\n      /*if(user){\n        setIsLoggedIn(true);        \n        setUserObj(user);\n      }  \n      else{\n        setIsLoggedIn(false);              \n      }      */\n      if(user){\n        setUserObj({\n          displayName : user.displayName,\n          uid : user.uid,\n          updateProfile : (args) => user.updateProfile(args)\n        });\n      }else{\n        setUserObj(null);\n      }\n      setInit(true);\n    })\n  }, []);\n  \n  //setInterval(() => {\n  //  console.log(authService.currentUser)\n  //}, 2000);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName : user.displayName,\n      uid : user.uid,\n      updateProfile : (args) => user.updateProfile(args)\n    });\n  }\n\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn = {Boolean(userObj)} userObj={userObj} /> : \"Initializing....\"}\n      <footer>&copy; Nwitter {new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;","/Users/yurako/Documents/nwitter_ko/nwitter/src/components/Router.js",[],"/Users/yurako/Documents/nwitter_ko/nwitter/src/components/Navigation.js",[],"/Users/yurako/Documents/nwitter_ko/nwitter/src/routes/Home.js",["101"],"import React, { useState, useEffect } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport Nweet from \"../components/Nweet\"\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ( { userObj }) => {\n     \n    const [nweets, setNweets] = useState([]);\n    \n    // fire base db select\n    // old version\n    /*const getNweets = async() => {\n        const dbNweets = await dbService.collection(\"nweets\").get();\n        dbNweets.forEach((document) => {\n            const nweetObject = {\n                ...document.data(),     // spread attribute 기능.. es6 참고\n                id : document.id                \n            }\n            setNweets((prev) => [nweetObject, ...prev]);      // 함수를 전달할 경우 이전 값을 불러올 수 있음 리액트의 경우\n        });        \n    }*/\n\n    useEffect(() => {\n        //getNweets();  // old version\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\n            const nweetArray = snapshot.docs.map((doc) => ({id : doc.id, ...doc.data()}));\n            setNweets(nweetArray);\n        });\n    }, []);    \n\n    return (\n        <div>\n            <NweetFactory userObj ={userObj}/>\n            <div>\n                {nweets.map((nweet) => (\n                    <Nweet key = {nweet.id} nweetObj = {nweet} isOwner = {nweet.creatorId === userObj.uid} />\n                ))}\n            </div>\n        </div>\n    );\n};\nexport default Home;","/Users/yurako/Documents/nwitter_ko/nwitter/src/routes/Profile.js",["102"],"import React, { useEffect, useState } from \"react\";\nimport {authService, dbService} from \"fbase\";\nimport {useHistory} from \"react-router-dom\";\n\nconst Profile = ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDiplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");      // redirect 태그를 안쓰고 처리        \n    };\n\n    const getMyNweets = async () => {\n        await dbService.collection(\"nweets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createdAt\").get();\n    };\n\n    useEffect(() => {\n        getMyNweets();\n    }, []);\n\n\n    const onSubmit = async (event) => {\n        event.preventDefault();        \n        if(userObj.displayName !== newDisplayName){\n            // 프로필 사진 올리는거 추가하긔..!\n            await userObj.updateProfile({\n                displayName : newDisplayName\n            });\n            refreshUser();\n        }\n    }\n\n    const onChange = (event) => {\n        const {target : {value}} = event;\n        setNewDiplayName(value);\n    }\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">            \n                <input type=\"text\" placeholder=\"Display name\" onChange={onChange} value={newDisplayName} autoFocus className=\"formInput\" />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n}\n\nexport default Profile;","/Users/yurako/Documents/nwitter_ko/nwitter/src/routes/Auth.js",[],"/Users/yurako/Documents/nwitter_ko/nwitter/src/components/Nweet.js",["103"],"import React, {useState} from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        if(ok){\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();      // delete nweet\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();       // delete file\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {target : {value}} = event;\n        setNewNweet(value)\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text  : newNweet\n        });\n        setEditing(false);\n    }\n\n    return(\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    {isOwner && (\n                        <>\n                            <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                                <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} onChange={onChange} autoFocus required className=\"formInput\" />\n                                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n                            </form>\n                            <button onClick={toggleEditing} className=\"formBtn cancelBtn\" >Cancel</button>\n                        </>\n                    )}                    \n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && (<img src={nweetObj.attachmentUrl} />)}\n                    {isOwner && (\n                        <div class=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                            <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                            <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}                                    \n                </>\n            )}            \n        </div>\n    );    \n};\n\nexport default Nweet;","/Users/yurako/Documents/nwitter_ko/nwitter/src/components/NweetFactory.js",["104"],"import { dbService, storageService } from \"fbase\";\nimport {v4 as uuidv4} from \"uuid\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({userObj}) => {\n    const [nweet, setNweet] = useState(\"\");   \n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        // 이미지 첨부 확인\n        if (attachment !== \"\") {            \n            // 사진에 이름을 주는 작업을 랜덤으로 돌려도 되고 uuid 를 사용해도 됨 여기선 uuid 사용함\n            const attchmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)        // image insert\n            const response = await attchmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();            \n        }\n\n        const nweetObj = {\n            text : nweet,\n            createdAt : Date.now(),\n            creatorId : userObj.uid,\n            attachmentUrl\n        }\n\n        // fire base db insert        \n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {target : {value}} = event;\n        setNweet(value);\n    };\n\n    // image file input\n    const onFileChange = (event) => {\n        const {target : {files}} = event;\n        const theFile = files[0];          \n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget : {result}} = finishedEvent\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile);\n    };\n\n    // clear image file\n    const onClearAttachment = () => setAttachment(\"\");\n\n    return(\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                className=\"factoryInput__input\"\n                value={nweet}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"What's on your mind?\"\n                maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}/>\n\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                    src={attachment}\n                    style={{\n                        backgroundImage: attachment,\n                    }}\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                    <span>Remove</span>\n                    <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div> )}\n        </form>\n    );\n}\n\nexport default NweetFactory;","/Users/yurako/Documents/nwitter_ko/nwitter/src/components/AuthForm.js",["105"],"import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const inputStyles = {};\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    const onChange = (event) => {\n        const {target : {name, value}} = event;\n        if(name === \"email\"){\n            setEmail(value)\n        }else if(name === \"password\"){\n            setPassword(value);\n        }        \n    };\n    \n    const onSubmit = async(event) => {\n        event.preventDefault();\n        try{            \n            if(newAccount){\n                // create account\n                await authService.createUserWithEmailAndPassword(\n                    email, password\n                );\n            }else {\n                // log in\n                await authService.signInWithEmailAndPassword(\n                    email, password\n                );\n            }\n        }catch(error){\n            setError(error.message);\n        }        \n    };\n\n    return(\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input name=\"email\" type=\"email\" placeholder = \"Email\" required value={email} onChange={onChange} className=\"authInput\"/>\n                <input name=\"password\" type=\"password\" placeholder = \"Password\" required value={password} onChange={onChange} className=\"authInput\"/>\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\"/>        \n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\n        </>\n    );\n}\n\nexport default AuthForm;",{"ruleId":"106","severity":1,"message":"107","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":13},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":6,"column":1,"nodeType":"116","endLine":17,"endColumn":2},{"ruleId":"110","replacedBy":"117"},{"ruleId":"112","replacedBy":"118"},{"ruleId":"106","severity":1,"message":"119","line":7,"column":10,"nodeType":"108","messageId":"109","endLine":7,"endColumn":20},{"ruleId":"106","severity":1,"message":"120","line":7,"column":22,"nodeType":"108","messageId":"109","endLine":7,"endColumn":35},{"ruleId":"106","severity":1,"message":"121","line":2,"column":21,"nodeType":"108","messageId":"109","endLine":2,"endColumn":35},{"ruleId":"122","severity":1,"message":"123","line":20,"column":8,"nodeType":"124","endLine":20,"endColumn":10,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":49,"column":49,"nodeType":"128","endLine":49,"endColumn":85},{"ruleId":"126","severity":1,"message":"127","line":84,"column":21,"nodeType":"128","endLine":89,"endColumn":23},{"ruleId":"106","severity":1,"message":"129","line":11,"column":11,"nodeType":"108","messageId":"109","endLine":11,"endColumn":22},"no-unused-vars","'fbase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["130"],"no-negated-in-lhs",["131"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["130"],["131"],"'isLoggedIn' is assigned a value but never used.","'setIsLoggedIn' is assigned a value but never used.","'storageService' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyNweets'. Either include it or remove the dependency array.","ArrayExpression",["132"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'inputStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},"Update the dependencies array to be: [getMyNweets]",{"range":"135","text":"136"},[648,650],"[getMyNweets]"]