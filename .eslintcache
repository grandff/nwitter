[{"/Users/kjm/Documents/nwitter/src/index.js":"1","/Users/kjm/Documents/nwitter/src/components/App.js":"2","/Users/kjm/Documents/nwitter/src/components/Router.js":"3","/Users/kjm/Documents/nwitter/src/routes/Auth.js":"4","/Users/kjm/Documents/nwitter/src/routes/Home.js":"5","/Users/kjm/Documents/nwitter/src/fbase.js":"6","/Users/kjm/Documents/nwitter/src/components/Navigation.js":"7","/Users/kjm/Documents/nwitter/src/routes/Profile.js":"8","/Users/kjm/Documents/nwitter/src/components/Nweet.js":"9","/Users/yurako/Documents/nwitter_ko/nwitter/src/index.js":"10","/Users/yurako/Documents/nwitter_ko/nwitter/src/fbase.js":"11","/Users/yurako/Documents/nwitter_ko/nwitter/src/components/App.js":"12","/Users/yurako/Documents/nwitter_ko/nwitter/src/components/Router.js":"13","/Users/yurako/Documents/nwitter_ko/nwitter/src/components/Navigation.js":"14","/Users/yurako/Documents/nwitter_ko/nwitter/src/routes/Home.js":"15","/Users/yurako/Documents/nwitter_ko/nwitter/src/routes/Profile.js":"16","/Users/yurako/Documents/nwitter_ko/nwitter/src/routes/Auth.js":"17","/Users/yurako/Documents/nwitter_ko/nwitter/src/components/Nweet.js":"18"},{"size":236,"mtime":1608712617561,"results":"19","hashOfConfig":"20"},{"size":896,"mtime":1609297389505,"results":"21","hashOfConfig":"20"},{"size":869,"mtime":1609297410396,"results":"22","hashOfConfig":"20"},{"size":2425,"mtime":1609124733047,"results":"23","hashOfConfig":"20"},{"size":2008,"mtime":1609298616760,"results":"24","hashOfConfig":"20"},{"size":615,"mtime":1609211582156,"results":"25","hashOfConfig":"20"},{"size":249,"mtime":1609124909554,"results":"26","hashOfConfig":"20"},{"size":415,"mtime":1609125220461,"results":"27","hashOfConfig":"20"},{"size":1615,"mtime":1609299488224,"results":"28","hashOfConfig":"20"},{"size":236,"mtime":1609726824552,"results":"29","hashOfConfig":"30"},{"size":1017,"mtime":1609813751225,"results":"31","hashOfConfig":"30"},{"size":1380,"mtime":1610076775918,"results":"32","hashOfConfig":"30"},{"size":945,"mtime":1610076594557,"results":"33","hashOfConfig":"30"},{"size":280,"mtime":1609987650097,"results":"34","hashOfConfig":"30"},{"size":3529,"mtime":1609986921983,"results":"35","hashOfConfig":"30"},{"size":1494,"mtime":1610076598836,"results":"36","hashOfConfig":"30"},{"size":2425,"mtime":1609726824552,"results":"37","hashOfConfig":"30"},{"size":2036,"mtime":1609817168519,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},"jlvtnm",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"62"},"1xwntnt",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},"/Users/kjm/Documents/nwitter/src/index.js",["82"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport fbase from \"./fbase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);",["83","84"],"/Users/kjm/Documents/nwitter/src/components/App.js",[],"/Users/kjm/Documents/nwitter/src/components/Router.js",[],"/Users/kjm/Documents/nwitter/src/routes/Auth.js",[],"/Users/kjm/Documents/nwitter/src/routes/Home.js",[],"/Users/kjm/Documents/nwitter/src/fbase.js",[],"/Users/kjm/Documents/nwitter/src/components/Navigation.js",[],"/Users/kjm/Documents/nwitter/src/routes/Profile.js",["85"],"import React from \"react\";\nimport {authService} from \"fbase\";\nimport {useHistory} from \"react-router-dom\";\n\n\nexport default () => {\n    const history = useHistory();\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");      // redirect 태그를 안쓰고 처리\n    }\n    return (\n        <>\n            <button onClick = {onLogOutClick}>Log Out</button>\n        </>\n    );\n}","/Users/kjm/Documents/nwitter/src/components/Nweet.js",[],"/Users/yurako/Documents/nwitter_ko/nwitter/src/index.js",["86"],["87","88"],"/Users/yurako/Documents/nwitter_ko/nwitter/src/fbase.js",[],"/Users/yurako/Documents/nwitter_ko/nwitter/src/components/App.js",["89","90"],"/Users/yurako/Documents/nwitter_ko/nwitter/src/components/Router.js",[],"/Users/yurako/Documents/nwitter_ko/nwitter/src/components/Navigation.js",[],"/Users/yurako/Documents/nwitter_ko/nwitter/src/routes/Home.js",["91"],"import React, { useState, useEffect } from \"react\";\nimport {v4 as uuidv4} from \"uuid\";\nimport { dbService, storageService } from \"fbase\";\nimport Nweet from \"../components/Nweet\"\n\nconst Home = ( { userObj }) => {\n    const [nweet, setNweet] = useState(\"\");    \n    const [nweets, setNweets] = useState([]);\n    const [attachment, setAttachment] = useState(\"\");\n    // fire base db select\n    // old version\n    /*const getNweets = async() => {\n        const dbNweets = await dbService.collection(\"nweets\").get();\n        dbNweets.forEach((document) => {\n            const nweetObject = {\n                ...document.data(),     // spread attribute 기능.. es6 참고\n                id : document.id                \n            }\n            setNweets((prev) => [nweetObject, ...prev]);      // 함수를 전달할 경우 이전 값을 불러올 수 있음 리액트의 경우\n        });        \n    }*/\n\n    useEffect(() => {\n        //getNweets();  // old version\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\n            const nweetArray = snapshot.docs.map((doc) => ({id : doc.id, ...doc.data()}));\n            setNweets(nweetArray);\n        });\n    }, []);\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        // 이미지 첨부 확인\n        if (attachment !== \"\") {            \n            // 사진에 이름을 주는 작업을 랜덤으로 돌려도 되고 uuid 를 사용해도 됨 여기선 uuid 사용함\n            const attchmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)        // image insert\n            const response = await attchmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();            \n        }\n\n        const nweetObj = {\n            text : nweet,\n            createdAt : Date.now(),\n            creatorId : userObj.uid,\n            attachmentUrl\n        }\n\n        // fire base db insert        \n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {target : {value}} = event;\n        setNweet(value);\n    };\n\n    // image file input\n    const onFileChange = (event) => {\n        const {target : {files}} = event;\n        const theFile = files[0];          \n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget : {result}} = finishedEvent\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile);\n    };\n\n    // clear image file\n    const onClearAttachmentClick = () => setAttachment(null);\n\n    return (\n        <div>\n            <form onSubmit = {onSubmit}>\n                <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120}/>\n                <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n                <input type=\"submit\" value=\"Nweet\" />\n                {attachment && \n                    <div>\n                        <img src ={attachment} width = \"50px\" height=\"50px\" />\n                        <button onClick={onClearAttachmentClick}>Clear</button>\n                    </div> }\n            </form>\n            <div>\n                {nweets.map((nweet) => (\n                    <Nweet key = {nweet.id} nweetObj = {nweet} isOwner = {nweet.creatorId === userObj.uid} />\n                ))}\n            </div>\n        </div>\n    );\n};\nexport default Home;","/Users/yurako/Documents/nwitter_ko/nwitter/src/routes/Profile.js",["92","93"],"import React, { useEffect, useState } from \"react\";\nimport {authService, dbService} from \"fbase\";\nimport {useHistory} from \"react-router-dom\";\n\nconst Profile = ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDiplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");      // redirect 태그를 안쓰고 처리\n    };\n\n    const getMyNweets = async () => {\n        const nweets = await dbService.collection(\"nweets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createdAt\").get();\n    };\n\n    useEffect(() => {\n        getMyNweets();\n    }, []);\n\n\n    const onSubmit = async (event) => {\n        event.preventDefault();        \n        if(userObj.displayName !== newDisplayName){\n            // 프로필 사진 올리는거 추가하긔..!\n            await userObj.updateProfile({\n                displayName : newDisplayName\n            });\n            refreshUser();\n        }\n    }\n\n    const onChange = (event) => {\n        const {target : {value}} = event;\n        setNewDiplayName(value);\n    }\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input type=\"text\" placeholder=\"Display name\" onChange={onChange} value={newDisplayName} />\n                <input type=\"submit\" value=\"Update Profile\" />\n            </form>\n            <button onClick = {onLogOutClick}>Log Out</button>\n        </>\n    );\n}\n\nexport default Profile;","/Users/yurako/Documents/nwitter_ko/nwitter/src/routes/Auth.js",[],"/Users/yurako/Documents/nwitter_ko/nwitter/src/components/Nweet.js",["94"],"import React, {useState} from \"react\";\nimport { dbService, storageService } from \"fbase\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        if(ok){\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();      // delete nweet\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();       // delete file\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {target : {value}} = event;\n        setNewNweet(value)\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text  : newNweet\n        });\n        setEditing(false);\n    }\n\n    return(\n        <div>\n            {editing ? (\n                <>\n                    {isOwner && (\n                        <>\n                            <form onSubmit={onSubmit}>\n                                <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} onChange={onChange} required />\n                                <input type=\"submit\" value=\"Update Nweet\" />\n                            </form>\n                            <button onClick={toggleEditing}>Cancel</button>\n                        </>\n                    )}                    \n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && (<img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/>)}\n                    {isOwner && <><button onClick={onDeleteClick}>Delete Nweet</button><button onClick={toggleEditing}>Edit Nweet</button></>}                                    \n                </>\n            )}            \n        </div>\n    );    \n};\n\nexport default Nweet;",{"ruleId":"95","severity":1,"message":"96","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":13},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":6,"column":1,"nodeType":"105","endLine":17,"endColumn":2},{"ruleId":"95","severity":1,"message":"96","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":13},{"ruleId":"99","replacedBy":"106"},{"ruleId":"101","replacedBy":"107"},{"ruleId":"95","severity":1,"message":"108","line":7,"column":10,"nodeType":"97","messageId":"98","endLine":7,"endColumn":20},{"ruleId":"95","severity":1,"message":"109","line":7,"column":22,"nodeType":"97","messageId":"98","endLine":7,"endColumn":35},{"ruleId":"110","severity":1,"message":"111","line":82,"column":25,"nodeType":"112","endLine":82,"endColumn":79},{"ruleId":"95","severity":1,"message":"113","line":14,"column":15,"nodeType":"97","messageId":"98","endLine":14,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":19,"column":8,"nodeType":"116","endLine":19,"endColumn":10,"suggestions":"117"},{"ruleId":"110","severity":1,"message":"111","line":47,"column":49,"nodeType":"112","endLine":47,"endColumn":111},"no-unused-vars","'fbase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["118"],"no-negated-in-lhs",["119"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["118"],["119"],"'isLoggedIn' is assigned a value but never used.","'setIsLoggedIn' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'nweets' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyNweets'. Either include it or remove the dependency array.","ArrayExpression",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [getMyNweets]",{"range":"123","text":"124"},[654,656],"[getMyNweets]"]