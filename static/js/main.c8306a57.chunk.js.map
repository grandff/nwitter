{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","console","log","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attchmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","Navigation","display","justifyContent","marginTop","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDiplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPA0BAA,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAMJ,IAAMC,EAAmBR,IACnBS,EAAcT,IAASU,OACvBC,EAAYX,IAASY,YACrBC,EAAiBb,IAASc,UCwBxBC,EApDE,WAAO,IAAD,EAEOC,mBAAS,IAFhB,mBAEZC,EAFY,KAELC,EAFK,OAGaF,mBAAS,IAHtB,mBAGZG,EAHY,KAGFC,EAHE,OAIiBJ,oBAAS,GAJ1B,mBAIZK,EAJY,KAIAC,EAJA,OAKON,mBAAS,IALhB,mBAKZO,EALY,KAKLC,EALK,KAWbC,EAAW,SAACC,GAAW,IAAD,EACSA,EAA1BC,OAAUC,EADO,EACPA,KAAMC,EADC,EACDA,MACX,UAATD,EACCV,EAASW,GACK,aAATD,GACLR,EAAYS,IAIdC,EAAQ,uCAAG,WAAMJ,GAAN,SAAAK,EAAA,yDACbL,EAAMM,iBADO,UAGNX,EAHM,gCAKCZ,EAAYwB,+BACdhB,EAAOE,GANN,6CAUCV,EAAYyB,2BACdjB,EAAOE,GAXN,yDAeTK,EAAS,KAAMW,SAfN,0DAAH,sDAmBd,OACI,qCACI,uBAAML,SAAUA,EAAUM,UAAU,YAApC,UACI,uBAAOR,KAAK,QAAQS,KAAK,QAAQC,YAAc,QAAQC,UAAQ,EAACV,MAAOZ,EAAOQ,SAAUA,EAAUW,UAAU,cAC5G,uBAAOR,KAAK,WAAWS,KAAK,WAAWC,YAAc,WAAWC,UAAQ,EAACV,MAAOV,EAAUM,SAAUA,EAAUW,UAAU,cACxH,uBAAOC,KAAK,SAASR,MAAOR,EAAa,iBAAmB,SAAUe,UAAU,yBAC/Eb,GAAS,sBAAMa,UAAU,YAAhB,SAA6Bb,OAE3C,sBAAMiB,QAtCQ,kBAAMlB,GAAc,SAACmB,GAAD,OAAWA,MAsCfL,UAAU,aAAxC,SAAsDf,EAAa,UAAY,uB,gBCN5EqB,EAlCD,WACV,IAAMC,EAAa,uCAAG,WAAOjB,GAAP,mBAAAK,EAAA,4DAGN,YAFKH,EAASF,EAAnBC,OAAUC,MAGbgB,EAAW,IAAIpC,EAAiBE,KAAKmC,mBACvB,WAATjB,IACLgB,EAAW,IAAIpC,EAAiBE,KAAKoC,oBANvB,SASCrC,EAAYsC,gBAAgBH,GAT7B,OASZI,EATY,OAUlBC,QAAQC,IAAIF,GAVM,2CAAH,sDAanB,OACA,sBAAKZ,UAAU,gBAAf,UACI,cAAC,IAAD,CACEe,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAEzB,cAAC,EAAD,IACA,sBAAKpB,UAAU,WAAf,UACI,yBAAQI,QAASG,EAAef,KAAK,SAASQ,UAAU,UAAxD,kCACqB,cAAC,IAAD,CAAiBe,KAAMM,SAE5C,yBAAQjB,QAASG,EAAef,KAAK,SAASQ,UAAU,UAAxD,kCACqB,cAAC,IAAD,CAAiBe,KAAMO,gB,gBC2BzCC,EA5DD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QAAa,EACL7C,oBAAS,GADJ,mBAC5B8C,EAD4B,KACnBC,EADmB,OAEH/C,mBAAS4C,EAASI,MAFf,mBAE5BC,EAF4B,KAElBC,EAFkB,KAG7BC,EAAa,uCAAG,sBAAApC,EAAA,0DACPqC,OAAOC,QAAQ,+CADR,gCAGR1D,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMC,SAH/B,uBAIR3D,EAAe4D,WAAWb,EAASc,eAAeF,SAJ1C,2CAAH,qDAQbG,EAAgB,kBAAMZ,GAAW,SAACtB,GAAD,OAAWA,MAO5CX,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAEPrB,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAChDZ,KAAQC,IAHC,OAKbF,GAAW,GALE,2CAAH,sDAQd,OACI,qBAAK3B,UAAU,QAAf,SACK0B,EACG,mCACKD,GACG,qCACI,uBAAM/B,SAAUA,EAAUM,UAAU,sBAApC,UACI,uBAAOC,KAAK,OAAOC,YAAY,kBAAkBT,MAAOoC,EAAUxC,SApB7E,SAACC,GAAW,IACRG,EAAUH,EAApBC,OAAUE,MACjBqC,EAAYrC,IAkBkGgD,WAAS,EAACtC,UAAQ,EAACH,UAAU,cACnH,uBAAOC,KAAK,SAASR,MAAM,eAAeO,UAAU,eAExD,wBAAQI,QAASmC,EAAevC,UAAU,oBAA1C,yBAKZ,qCACI,6BAAKwB,EAASI,OACbJ,EAASc,eAAkB,qBAAKI,IAAKlB,EAASc,gBAC9Cb,GACG,sBAAKkB,MAAM,iBAAX,UACI,sBAAMvC,QAAS2B,EAAf,SACA,cAAC,IAAD,CAAiBhB,KAAM6B,QAEvB,sBAAMxC,QAASmC,EAAf,SACA,cAAC,IAAD,CAAiBxB,KAAM8B,iB,QC2CpCC,EA5FM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACNnE,mBAAS,IADH,mBACzBoE,EADyB,KAClBC,EADkB,OAEIrE,mBAAS,IAFb,mBAEzBsE,EAFyB,KAEbC,EAFa,KAI1BzD,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACC,KAAVqD,EADS,oDAIb1D,EAAMM,iBACF0C,EAAgB,GAED,KAAfY,EAPS,wBASHE,EAAe3E,EAAe4E,MAAMC,MAArB,UAA8BP,EAAQQ,IAAtC,YAA6CC,iBATzD,SAUcJ,EAAaK,UAAUP,EAAY,YAVjD,cAUHQ,EAVG,iBAWaA,EAASL,IAAIM,iBAX1B,QAWTrB,EAXS,sBAcPd,EAAW,CACbI,KAAOoB,EACPY,UAAYC,KAAKC,MACjBC,UAAYhB,EAAQQ,IACpBjB,iBAlBS,UAsBP/D,EAAUyF,WAAW,UAAUC,IAAIzC,GAtB5B,QAuBbyB,EAAS,IACTE,EAAc,IAxBD,4CAAH,sDA8Cd,OACI,uBAAMzD,SAAUA,EAAUM,UAAU,cAApC,UACI,sBAAKA,UAAU,0BAAf,UACI,uBACAA,UAAU,sBACVP,MAAOuD,EACP3D,SA1BK,SAACC,GAAW,IACRG,EAAUH,EAApBC,OAAUE,MACjBwD,EAASxD,IAyBDQ,KAAK,OACLC,YAAY,uBACZgE,UAAW,MAEX,uBAAOjE,KAAK,SAASR,MAAM,SAASO,UAAU,2BAElD,wBAAOmE,IAAI,cAAcnE,UAAU,sBAAnC,UACI,8CACA,cAAC,IAAD,CAAiBe,KAAMqD,SAE3B,uBAAOjC,GAAG,cACNlC,KAAK,OACLoE,OAAO,UACPhF,SAlCS,SAACC,GAAW,IAEvBgF,EADqBhF,EAApBC,OAAUgF,MACK,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IACXC,EAAWD,EAA5BE,cAAiBD,OACxBzB,EAAcyB,IAElBJ,EAAOM,cAAcR,IA2BbnD,MAAO,CACH4D,QAAS,KAGhB7B,GACG,sBAAKlD,UAAU,0BAAf,UACI,qBACA0C,IAAKQ,EACL/B,MAAO,CACH6D,gBAAiB9B,KAGrB,sBAAKlD,UAAU,qBAAqBI,QAnC1B,kBAAM+C,EAAc,KAmC9B,UACA,0CACA,cAAC,IAAD,CAAiBpC,KAAMkE,gBClD5BC,EApCF,SAAC,GAAkB,IAAfnC,EAAc,EAAdA,QAAc,EAECnE,mBAAS,IAFV,mBAEpBuG,EAFoB,KAEZC,EAFY,KAyB3B,OARAC,qBAAU,WAEN9G,EAAUyF,WAAW,UAAUsB,YAAW,SAAAC,GACtC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACxD,GAAD,oBAAWC,GAAKD,EAAIC,IAAOD,EAAItB,WACpEwE,EAAUI,QAEf,IAGC,gCACI,cAAC,EAAD,CAAczC,QAAUA,IACxB,8BACKoC,EAAOO,KAAI,SAAC1C,GAAD,OACR,cAAC,EAAD,CAAwBxB,SAAYwB,EAAOvB,QAAWuB,EAAMe,YAAchB,EAAQQ,KAApEP,EAAMb,aCDzBwD,EA5BI,SAAC,GAAD,IAAE5C,EAAF,EAAEA,QAAF,OAAe,8BAC9B,qBAAI5B,MAAO,CAAEyE,QAAS,OAAQC,eAAgB,SAAUC,UAAW,IAAnE,UACI,6BACI,cAAC,IAAD,CAAMC,GAAG,IAAI5E,MAAO,CAAE6E,YAAa,IAAnC,SACI,cAAC,IAAD,CAAiBjF,KAAMC,IAAWC,MAAO,UAAWC,KAAK,WAGjE,6BACI,eAAC,IAAD,CACA6E,GAAG,WACH5E,MAAO,CACH8E,WAAY,GACZL,QAAS,OACTM,cAAe,SACfC,WAAY,SACZC,SAAU,IAPd,UAUA,cAAC,IAAD,CAAiBrF,KAAMsF,IAAQpF,MAAO,UAAWC,KAAK,OACtD,sBAAMC,MAAO,CAAE2E,UAAW,IAA1B,SACK/C,EAAQuD,YAAR,UACIvD,EAAQuD,YADZ,kBAEC,uBC6BHC,EArDC,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,YAAazD,EAAa,EAAbA,QACrB0D,EAAUC,cADwB,EAEG9H,mBAASmE,EAAQuD,aAFpB,mBAEjCK,EAFiC,KAEjBC,EAFiB,KASlCC,EAAW,uCAAG,sBAAAlH,EAAA,sEACVpB,EAAUyF,WAAW,UAAU8C,MAAM,YAAa,KAAM/D,EAAQQ,KAAKwD,QAAQ,aAAaC,MADhF,2CAAH,qDAIjB3B,qBAAU,WACNwB,MACD,IAGH,IAAMnH,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBACHmD,EAAQuD,cAAgBK,EAFd,gCAIH5D,EAAQkE,cAAc,CACxBX,YAAcK,IALT,OAOTH,IAPS,2CAAH,sDAed,OACI,sBAAKxG,UAAU,YAAf,UACI,uBAAMN,SAAUA,EAAUM,UAAU,cAApC,UACI,uBAAOC,KAAK,OAAOC,YAAY,eAAeb,SAPzC,SAACC,GAAW,IACRG,EAAUH,EAApBC,OAAUE,MACjBmH,EAAiBnH,IAKyDA,MAAOkH,EAAgBlE,WAAS,EAACzC,UAAU,cAC7G,uBACIC,KAAK,SACLR,MAAM,iBACNO,UAAU,UACVmB,MAAO,CACH2E,UAAW,SAIvB,sBAAM9F,UAAU,2BAA2BI,QA1C7B,WAClB/B,EAAY6I,UACZT,EAAQU,KAAK,MAwCT,yBCXGC,EAhCG,SAAC,GAAwC,IAAvCZ,EAAsC,EAAtCA,YAAaa,EAAyB,EAAzBA,WAAYtE,EAAa,EAAbA,QACzC,OACI,eAAC,IAAD,WACKsE,GAAc,cAAC,EAAD,CAAYtE,QAASA,IACpC,cAAC,IAAD,UACKsE,EACD,sBACIlG,MAAO,CACPmG,SAAU,IACVC,MAAO,OACPC,OAAQ,SACR1B,UAAW,GACXF,QAAS,OACTC,eAAgB,UAPpB,UAUA,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAO,IAApB,SACI,cAAC,EAAD,CAAM3E,QAAWA,MAErB,cAAC,IAAD,CAAO0E,OAAK,EAACC,KAAO,WAApB,SACI,cAAC,EAAD,CAAS3E,QAASA,EAASyD,YAAaA,SAI5C,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAO,IAApB,SACI,cAAC,EAAD,YCqBLC,MAjDf,WAAgB,IAAD,EACW/I,oBAAS,GADpB,mBACNgJ,EADM,KACAC,EADA,OAEuBjJ,oBAAS,GAFhC,gCAGiBA,mBAAS,OAH1B,mBAGNmE,EAHM,KAGG+E,EAHH,KAyCb,OApCAzC,qBAAU,WACRhH,EAAY0J,oBAAoB,SAACC,GAU7BF,EADCE,EACU,CACT1B,YAAc0B,EAAK1B,YACnB/C,IAAMyE,EAAKzE,IACX0D,cAAgB,SAACgB,GAAD,OAAUD,EAAKf,cAAcgB,KAGpC,MAEbJ,GAAQ,QAET,IAgBD,qCACGD,EAAO,cAAC,EAAD,CAAWpB,YAXH,WAClB,IAAMwB,EAAO3J,EAAY6J,YACzBJ,EAAW,CACTxB,YAAc0B,EAAK1B,YACnB/C,IAAMyE,EAAKzE,IACX0D,cAAgB,SAACgB,GAAD,OAAUD,EAAKf,cAAcgB,OAMAZ,WAAcc,QAAQpF,GAAUA,QAASA,IAAc,mBACpG,oDAAwB,IAAIc,MAAOuE,qB,MC3CzCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c8306a57.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\n\n/* 젠장 */\n/*\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID     \n};*/\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBuyKqLZipXnLF-GnsVndd9SjQNvin_Kuk\",\n    authDomain: \"nwitter-c33db.firebaseapp.com\",\n    projectId: \"nwitter-c33db\",\n    storageBucket: \"nwitter-c33db.appspot.com\",\n    messagingSenderId: \"111942113812\",\n    appId: \"1:111942113812:web:4f03ea76a487e337202501\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const inputStyles = {};\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    const onChange = (event) => {\n        const {target : {name, value}} = event;\n        if(name === \"email\"){\n            setEmail(value)\n        }else if(name === \"password\"){\n            setPassword(value);\n        }        \n    };\n    \n    const onSubmit = async(event) => {\n        event.preventDefault();\n        try{            \n            if(newAccount){\n                // create account\n                await authService.createUserWithEmailAndPassword(\n                    email, password\n                );\n            }else {\n                // log in\n                await authService.signInWithEmailAndPassword(\n                    email, password\n                );\n            }\n        }catch(error){\n            setError(error.message);\n        }        \n    };\n\n    return(\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input name=\"email\" type=\"email\" placeholder = \"Email\" required value={email} onChange={onChange} className=\"authInput\"/>\n                <input name=\"password\" type=\"password\" placeholder = \"Password\" required value={password} onChange={onChange} className=\"authInput\"/>\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\"/>        \n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\n        </>\n    );\n}\n\nexport default AuthForm;","import React from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth =  () => {            \n    const onSocialClick = async (event) => {      // sns login\n        const {target : {name}} = event;\n        let provider;\n        if(name === \"google\"){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }else if(name === \"github\"){\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n    }   \n\n    return (\n    <div className=\"authContainer\">\n        <FontAwesomeIcon\n          icon={faTwitter}\n          color={\"#04AAFF\"}\n          size=\"3x\"\n          style={{ marginBottom: 30 }}\n        />\n        <AuthForm />\n        <div className=\"authBtns\">\n            <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n            Continue with Google <FontAwesomeIcon icon={faGoogle} />\n            </button>\n            <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n            Continue with Github <FontAwesomeIcon icon={faGithub} />\n            </button>\n        </div>\n    </div>\n    )\n};\nexport default Auth;","import React, {useState} from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        if(ok){\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();      // delete nweet\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();       // delete file\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {target : {value}} = event;\n        setNewNweet(value)\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text  : newNweet\n        });\n        setEditing(false);\n    }\n\n    return(\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    {isOwner && (\n                        <>\n                            <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                                <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} onChange={onChange} autoFocus required className=\"formInput\" />\n                                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n                            </form>\n                            <button onClick={toggleEditing} className=\"formBtn cancelBtn\" >Cancel</button>\n                        </>\n                    )}                    \n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && (<img src={nweetObj.attachmentUrl} />)}\n                    {isOwner && (\n                        <div class=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                            <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                            <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}                                    \n                </>\n            )}            \n        </div>\n    );    \n};\n\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\nimport {v4 as uuidv4} from \"uuid\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({userObj}) => {\n    const [nweet, setNweet] = useState(\"\");   \n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        // 이미지 첨부 확인\n        if (attachment !== \"\") {            \n            // 사진에 이름을 주는 작업을 랜덤으로 돌려도 되고 uuid 를 사용해도 됨 여기선 uuid 사용함\n            const attchmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)        // image insert\n            const response = await attchmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();            \n        }\n\n        const nweetObj = {\n            text : nweet,\n            createdAt : Date.now(),\n            creatorId : userObj.uid,\n            attachmentUrl\n        }\n\n        // fire base db insert        \n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {target : {value}} = event;\n        setNweet(value);\n    };\n\n    // image file input\n    const onFileChange = (event) => {\n        const {target : {files}} = event;\n        const theFile = files[0];          \n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget : {result}} = finishedEvent\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile);\n    };\n\n    // clear image file\n    const onClearAttachment = () => setAttachment(\"\");\n\n    return(\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                className=\"factoryInput__input\"\n                value={nweet}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"What's on your mind?\"\n                maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}/>\n\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                    src={attachment}\n                    style={{\n                        backgroundImage: attachment,\n                    }}\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                    <span>Remove</span>\n                    <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div> )}\n        </form>\n    );\n}\n\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport Nweet from \"../components/Nweet\"\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ( { userObj }) => {\n     \n    const [nweets, setNweets] = useState([]);\n    \n    // fire base db select\n    // old version\n    /*const getNweets = async() => {\n        const dbNweets = await dbService.collection(\"nweets\").get();\n        dbNweets.forEach((document) => {\n            const nweetObject = {\n                ...document.data(),     // spread attribute 기능.. es6 참고\n                id : document.id                \n            }\n            setNweets((prev) => [nweetObject, ...prev]);      // 함수를 전달할 경우 이전 값을 불러올 수 있음 리액트의 경우\n        });        \n    }*/\n\n    useEffect(() => {\n        //getNweets();  // old version\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\n            const nweetArray = snapshot.docs.map((doc) => ({id : doc.id, ...doc.data()}));\n            setNweets(nweetArray);\n        });\n    }, []);    \n\n    return (\n        <div>\n            <NweetFactory userObj ={userObj}/>\n            <div>\n                {nweets.map((nweet) => (\n                    <Nweet key = {nweet.id} nweetObj = {nweet} isOwner = {nweet.creatorId === userObj.uid} />\n                ))}\n            </div>\n        </div>\n    );\n};\nexport default Home;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({userObj}) => <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n            <Link to=\"/\" style={{ marginRight: 10 }}>\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n            </Link>\n        </li>\n        <li>\n            <Link\n            to=\"/profile\"\n            style={{\n                marginLeft: 10,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                fontSize: 12,\n            }}\n            >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n                {userObj.displayName\n                ? `${userObj.displayName}의 Profile`\n                : \"Profile\"}\n            </span>\n            </Link>\n        </li>\n    </ul>\n</nav>\nexport default Navigation;","import React, { useEffect, useState } from \"react\";\nimport {authService, dbService} from \"fbase\";\nimport {useHistory} from \"react-router-dom\";\n\nconst Profile = ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDiplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");      // redirect 태그를 안쓰고 처리        \n    };\n\n    const getMyNweets = async () => {\n        await dbService.collection(\"nweets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createdAt\").get();\n    };\n\n    useEffect(() => {\n        getMyNweets();\n    }, []);\n\n\n    const onSubmit = async (event) => {\n        event.preventDefault();        \n        if(userObj.displayName !== newDisplayName){\n            // 프로필 사진 올리는거 추가하긔..!\n            await userObj.updateProfile({\n                displayName : newDisplayName\n            });\n            refreshUser();\n        }\n    }\n\n    const onChange = (event) => {\n        const {target : {value}} = event;\n        setNewDiplayName(value);\n    }\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">            \n                <input type=\"text\" placeholder=\"Display name\" onChange={onChange} value={newDisplayName} autoFocus className=\"formInput\" />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n}\n\nexport default Profile;","import React from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\"\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {    \n    return(\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} /> }\n            <Switch>\n                {isLoggedIn ? (\n                <div\n                    style={{\n                    maxWidth: 890,\n                    width: \"100%\",\n                    margin: \"0 auto\",\n                    marginTop: 80,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    }}\n                >\n                <Route exact path = \"/\">\n                    <Home userObj = {userObj} />\n                </Route> \n                <Route exact path = \"/profile\">\n                    <Profile userObj={userObj} refreshUser={refreshUser} />\n                </Route> \n                </div> \n                ) : (\n                <Route exact path = \"/\">\n                    <Auth />\n                </Route>)}\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport {authService} from \"fbase\";\n\nfunction App() {    \n  const [init, setInit] = useState(false);  \n  const [isLoggedIn, setIsLoggedIn] = useState(false);    // 로그인 여부 확인\n  const [userObj, setUserObj] = useState(null);   \n\n  useEffect(() => {\n    authService.onAuthStateChanged( (user) => {\n      /* change.. not use setisloggedin */\n      /*if(user){\n        setIsLoggedIn(true);        \n        setUserObj(user);\n      }  \n      else{\n        setIsLoggedIn(false);              \n      }      */\n      if(user){\n        setUserObj({\n          displayName : user.displayName,\n          uid : user.uid,\n          updateProfile : (args) => user.updateProfile(args)\n        });\n      }else{\n        setUserObj(null);\n      }\n      setInit(true);\n    })\n  }, []);\n  \n  //setInterval(() => {\n  //  console.log(authService.currentUser)\n  //}, 2000);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName : user.displayName,\n      uid : user.uid,\n      updateProfile : (args) => user.updateProfile(args)\n    });\n  }\n\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn = {Boolean(userObj)} userObj={userObj} /> : \"Initializing....\"}\n      <footer>&copy; Nwitter {new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}